# Generated by Django 2.2.1 on 2019-09-18 19:05

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminCommision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
            options={
                'verbose_name_plural': 'Admin Charges',
            },
        ),
        migrations.CreateModel(
            name='BankingInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_holder_name', models.CharField(blank=True, max_length=40, null=True)),
                ('credit_card_number', models.CharField(blank=True, max_length=40, null=True)),
                ('credit_card_masked', models.CharField(blank=True, max_length=40, null=True)),
                ('valid_upto', models.CharField(blank=True, max_length=40, null=True)),
                ('holder_usertype', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BannerImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner_img_file', models.FileField(default='marketing/img/default.jpg', upload_to='marketing/img')),
                ('banner_name', models.CharField(default='sample title', max_length=200, null=True)),
                ('banner_name_in_arabic', models.CharField(default='الفئة', max_length=200, null=True)),
                ('description', models.CharField(default='sample info', max_length=200, null=True)),
                ('description_in_arabic', models.CharField(default='الفئة', max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default='AR', max_length=100, null=True)),
                ('code_in_arabic', models.CharField(default='الفئة', max_length=100, null=True)),
                ('category', models.CharField(max_length=40, null=True, unique=True)),
                ('category_in_arabic', models.CharField(default='الفئة', max_length=40, null=True)),
                ('description', models.CharField(default='Test', max_length=500, null=True)),
                ('description_in_arabic', models.CharField(default='الفئة', max_length=500, null=True)),
                ('bannerimage', models.ImageField(default='service/img/default.jpg', upload_to='service/img')),
            ],
            options={
                'verbose_name_plural': 'Catagories',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(default='ftgyhiujk', max_length=40, unique=True)),
                ('city_in_arabic', models.CharField(default='ftgyhiujk', max_length=40)),
            ],
            options={
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='HelpAndSupport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contactaddress', models.CharField(max_length=400, null=True)),
                ('contactaddress_in_arabic', models.CharField(default='هذه لغة عربية بسيطة', max_length=400, null=True)),
                ('contactnumber', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=70)),
                ('website', models.CharField(blank=True, max_length=70)),
            ],
            options={
                'verbose_name_plural': 'Help And Support',
            },
        ),
        migrations.CreateModel(
            name='ImageUploadTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('image', models.ImageField(default='testimages/default.jpg', upload_to='testimages/')),
            ],
        ),
        migrations.CreateModel(
            name='MarketingCarousel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign_name', models.CharField(default='Marketing Campaign', max_length=250)),
                ('image', models.ImageField(default='marketing/img/default.jpg', max_length=250, upload_to='marketing/img')),
            ],
            options={
                'verbose_name_plural': 'Marketing Campaing Images',
            },
        ),
        migrations.CreateModel(
            name='NewBookings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_id', models.CharField(default='MNF00000000000000', max_length=200)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('requestor', models.CharField(default='Requestor', max_length=200)),
                ('provider', models.CharField(default='Provider', max_length=200)),
                ('service_name', models.CharField(default='Service Name', max_length=200)),
                ('appointment_city', models.CharField(default='Appointment City', max_length=200)),
                ('point_of_service', models.CharField(default='Remote', max_length=100)),
                ('accepted', models.BooleanField(default=False)),
                ('service_date', models.DateField(default=datetime.datetime(2019, 9, 18, 19, 5, 19, 416558))),
                ('service_time', models.TimeField(default=datetime.datetime(2019, 9, 18, 19, 5, 19, 416575))),
                ('task_status', models.CharField(choices=[('Upcoming', 'Upcoming'), ('Completed', 'Completed'), ('In Progress', 'In Progress')], default='Upcoming', max_length=100)),
                ('accepted_by_requester', models.BooleanField(default=False)),
                ('accepted_by_provider', models.BooleanField(default=False)),
                ('rescheduled_service_date', models.DateField(default=datetime.datetime(2019, 9, 18, 19, 5, 19, 416627))),
                ('rescheduled_service_time', models.TimeField(default=datetime.datetime(2019, 9, 18, 19, 5, 19, 416642))),
                ('reschedule_request_date', models.DateField(default=django.utils.timezone.now)),
                ('reschedule_request_time', models.TimeField(default=django.utils.timezone.now)),
                ('booking_cancelled', models.BooleanField(default=False)),
                ('providers_review_id', models.IntegerField(blank=True, default=0, null=True)),
                ('booking_completed', models.BooleanField(default=False)),
                ('booking_marked_completed_by_requestor', models.BooleanField(default=False)),
                ('booking_marked_completed_by_provider', models.BooleanField(default=False)),
                ('cancellation_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('cancelled_by_provider', models.BooleanField(default=False)),
                ('cancelled_by_requestor', models.BooleanField(default=False)),
                ('cancellation_date', models.DateField(default=datetime.datetime(2019, 9, 18, 19, 5, 19, 416766))),
                ('cancellation_time', models.TimeField(default=datetime.datetime(2019, 9, 18, 19, 5, 19, 416782))),
                ('cancellation_fee_applicable', models.BooleanField(default=False)),
                ('quote_requested_by_requestor', models.BooleanField(default=False)),
                ('quote_requested_by_provider', models.BooleanField(default=False)),
                ('admin_charges', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('service_charges', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('service_charge_rate', models.CharField(blank=True, default='', max_length=150, null=True)),
                ('service_end_time', models.TimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'New Bookings',
            },
        ),
        migrations.CreateModel(
            name='Otp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('otp', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ProvidersRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_id', models.IntegerField(default=0)),
                ('rating1', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
                ('created1', models.DateTimeField(default=datetime.datetime(2019, 9, 18, 19, 5, 19, 398318))),
                ('content1', models.TextField(null=True)),
                ('rating_by', models.IntegerField(default=1)),
                ('compliment_review', models.IntegerField(default=5)),
                ('user_id', models.IntegerField(default=1)),
                ('modified_date', models.DateTimeField(default=datetime.datetime(2019, 9, 18, 19, 5, 19, 398382))),
                ('test_fd', models.IntegerField(default=1)),
                ('provider_id', models.IntegerField(default=1)),
            ],
            options={
                'verbose_name_plural': 'MeenFee Providers Rating',
            },
        ),
        migrations.CreateModel(
            name='RawBooking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_city', models.CharField(blank=True, choices=[('Amman', 'Amman'), ('Irbid', 'Irbid'), ('Aqaba', 'Aqaba'), ('Noida', 'Noida')], max_length=100, null=True)),
                ('start_time', models.TimeField(auto_now=True)),
                ('end_time', models.TimeField(auto_now=True)),
                ('date', models.DateField(auto_now=True)),
                ('appointment_venue', models.CharField(blank=True, choices=[('Come to my place', 'Requester place'), ('Service provider place', 'Provider place'), ('Remotely', 'Remotely')], max_length=120, null=True)),
                ('appointment_gio_location', models.CharField(blank=True, max_length=30, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('isaccepted_by_provider', models.BooleanField(default=False)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('time_taken_accepting', models.PositiveIntegerField(blank=True, help_text='in minutes', null=True)),
                ('accepted_time', models.DateTimeField(blank=True, editable=False, null=True)),
                ('ispaymentadd', models.BooleanField(default=False)),
                ('paymentaddtime', models.DateTimeField(blank=True, null=True)),
                ('isbookingcompleted', models.BooleanField(default=False)),
                ('service_name', models.CharField(blank=True, max_length=200, null=True)),
                ('provider_name', models.CharField(blank=True, max_length=200, null=True)),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='provider', to=settings.AUTH_USER_MODEL)),
                ('requester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Raw Bookings',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(default='sample service', max_length=200, null=True)),
                ('service_name_in_arabic', models.CharField(default='الفئة', max_length=200, null=True)),
                ('experience', models.TextField(blank=True, null=True)),
                ('levelskill', models.CharField(blank=True, max_length=120, null=True)),
                ('service_place', models.CharField(blank=True, max_length=120, null=True)),
                ('city', models.CharField(blank=True, max_length=150, null=True)),
                ('distance_limit', models.CharField(blank=True, max_length=100, null=True)),
                ('service_pricing', models.PositiveIntegerField(blank=True, default=0, help_text='in Jordanian dinar', null=True)),
                ('pricing_timing_unit', models.CharField(blank=True, default='Per Hour', max_length=50, null=True)),
                ('quote_at_request', models.BooleanField(default=False, help_text='This will create popup when they accept a requester request')),
                ('provide_tools', models.BooleanField(default=True)),
                ('tool_specify', models.TextField(blank=True, null=True)),
                ('instant_booking', models.BooleanField(default=True)),
                ('avg_rating', models.DecimalField(decimal_places=5, default=0.0, max_digits=7)),
                ('count_of_rating', models.IntegerField(default=0)),
                ('available_on_Sunday', models.BooleanField(default=False)),
                ('available_on_Monday', models.BooleanField(default=False)),
                ('available_on_Tuesday', models.BooleanField(default=False)),
                ('available_on_Wednesday', models.BooleanField(default=False)),
                ('available_on_Thursday', models.BooleanField(default=False)),
                ('available_on_Friday', models.BooleanField(default=False)),
                ('available_on_Saturday', models.BooleanField(default=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('service_provider_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('service_image_1_s3', models.CharField(blank=True, max_length=300, null=True)),
                ('service_image_2_s3', models.CharField(blank=True, max_length=300, null=True)),
                ('service_image_3_s3', models.CharField(blank=True, max_length=300, null=True)),
                ('speciality', models.BooleanField(default=False)),
                ('service_location', models.CharField(blank=True, default='Service Location', max_length=250, null=True)),
                ('service_location_lat', models.DecimalField(blank=True, decimal_places=10, default=0.0, max_digits=20, null=True)),
                ('service_location_long', models.DecimalField(blank=True, decimal_places=10, default=0.0, max_digits=20, null=True)),
                ('locality', models.CharField(blank=True, max_length=50, null=True)),
                ('price_type', models.TextField(blank=True, null=True)),
                ('description', models.CharField(default='sample description', max_length=200, null=True)),
                ('description_in_arabic', models.CharField(default='الفئة', max_length=200, null=True)),
                ('service_pricing_precise', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='in Jordanian dinar', max_digits=10, null=True)),
                ('experience_description', models.TextField(blank=True, default='', null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meenfee.Category')),
            ],
            options={
                'verbose_name_plural': 'Services',
            },
        ),
        migrations.CreateModel(
            name='ServiceList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name_english', models.CharField(blank=True, max_length=200, null=True)),
                ('service_name_arabic', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'verbose_name_plural': 'Service List',
            },
        ),
        migrations.CreateModel(
            name='Something',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='Provider', max_length=100)),
                ('last_name', models.CharField(blank=True, default='last name', max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Something Table',
            },
        ),
        migrations.CreateModel(
            name='TestTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_text', models.CharField(default='Some Text', max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=92, null=True)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Wednesday',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot1_start', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 419827))),
                ('slot1_end', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 419846))),
                ('slot2_start', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 419860))),
                ('slot2_end', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 419876))),
                ('slot3_start', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 419890))),
                ('slot3_end', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 419903))),
                ('service', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='meenfee.Service')),
            ],
        ),
        migrations.CreateModel(
            name='UserOtherInfoTemp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Phone Number')),
                ('idcard', models.CharField(blank=True, max_length=50, null=True, verbose_name='ID Card Number')),
                ('isphvarified', models.BooleanField(default=False, verbose_name='Is Phone Varified')),
                ('isemvarified', models.BooleanField(default=False, verbose_name='Is Email Verified')),
                ('usertype', models.CharField(blank=True, max_length=20, null=True)),
                ('avg_rating', models.FloatField(default=0.0)),
                ('response_within', models.PositiveIntegerField(blank=True, help_text='in minutes', null=True)),
                ('location', models.CharField(blank=True, choices=[('Amman', 'Amman'), ('Irbid', 'Irbid'), ('Aqaba', 'Aqaba'), ('Noida', 'Noida')], max_length=20, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('type_of_tasker', models.CharField(blank=True, choices=[('Elite', 'Elite'), ('Average', 'Average')], max_length=20, null=True)),
                ('bio', models.CharField(blank=True, max_length=250, null=True)),
                ('completed_tasks', models.PositiveIntegerField(default=0)),
                ('fcm_token', models.CharField(blank=True, max_length=500, null=True, verbose_name='fcm token')),
                ('profile_views', models.PositiveIntegerField(default=0)),
                ('profile_img', models.ImageField(default='service/img/default.jpg', upload_to='service/img')),
                ('current_language', models.CharField(choices=[('Arabic', 'Arabic'), ('English', 'English')], max_length=20, verbose_name='Current Language')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Other Info',
                'verbose_name_plural': 'User Other Info',
            },
        ),
        migrations.CreateModel(
            name='UserOtherInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Phone Number')),
                ('idcard', models.CharField(blank=True, max_length=50, null=True, verbose_name='ID Card Number')),
                ('isphvarified', models.BooleanField(default=False, verbose_name='Is Phone Varified ?')),
                ('isemvarified', models.BooleanField(default=False, verbose_name='Is Email Verified ?')),
                ('usertype', models.CharField(blank=True, max_length=20, null=True)),
                ('avg_rating', models.DecimalField(decimal_places=5, default=0, max_digits=6)),
                ('count_of_rating', models.IntegerField(default=0)),
                ('response_within', models.PositiveIntegerField(blank=True, default=0, help_text='in minutes', null=True)),
                ('response_within_count', models.IntegerField(blank=True, default=0, null=True)),
                ('location', models.CharField(blank=True, choices=[('Amman', 'Amman'), ('Irbid', 'Irbid'), ('Aqaba', 'Aqaba'), ('Noida', 'Noida')], max_length=20, null=True)),
                ('created', models.DateTimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 410075), null=True)),
                ('type_of_tasker', models.CharField(blank=True, choices=[('Elite', 'Elite'), ('Average', 'Average')], max_length=20, null=True)),
                ('bio', models.CharField(blank=True, max_length=250, null=True)),
                ('completed_tasks', models.PositiveIntegerField(default=0)),
                ('fcm_token', models.CharField(blank=True, max_length=500, null=True, verbose_name='fcm token')),
                ('profile_views', models.PositiveIntegerField(default=0)),
                ('profile_img', models.ImageField(default='service/img/default.jpg', upload_to='service/img')),
                ('current_language', models.CharField(choices=[('Arabic', 'Arabic'), ('English', 'English')], max_length=20, verbose_name='Current Language')),
                ('city', models.CharField(blank=True, max_length=150, null=True)),
                ('switched_to_provider', models.BooleanField(default=False)),
                ('user_address', models.CharField(default='Address', max_length=250)),
                ('user_address_lat', models.DecimalField(decimal_places=10, default=0.0, max_digits=20)),
                ('user_address_long', models.DecimalField(decimal_places=10, default=0.0, max_digits=20)),
                ('fb_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Unique Facebook ID')),
                ('google_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Unique Google ID')),
                ('is_phone_verified', models.BooleanField(default=False, verbose_name='Is Phone Verified')),
                ('is_email_verified', models.BooleanField(default=False, verbose_name='Is Email Verified')),
                ('is_id_verified', models.BooleanField(default=False, verbose_name='Is ID Verified')),
                ('is_account_fully_verified', models.BooleanField(default=False, verbose_name='Is account fully verified')),
                ('profile_image_s3', models.CharField(blank=True, max_length=300, null=True)),
                ('locality', models.CharField(blank=True, default='User Locality', max_length=50, null=True)),
                ('total_services_count', models.IntegerField(default=0)),
                ('avg_rating_rounded', models.DecimalField(decimal_places=1, default=0, max_digits=3)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Other Info',
                'verbose_name_plural': 'User Other Info',
            },
        ),
        migrations.CreateModel(
            name='Tuesday',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot1_start', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 419322))),
                ('slot1_end', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 419340))),
                ('slot2_start', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 419355))),
                ('slot2_end', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 419368))),
                ('slot3_start', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 419381))),
                ('slot3_end', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 419394))),
                ('service', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='meenfee.Service')),
            ],
        ),
        migrations.CreateModel(
            name='TrendingProviders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meenfee.Service')),
            ],
            options={
                'verbose_name_plural': 'Trending Providers',
            },
        ),
        migrations.CreateModel(
            name='Thursday',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot1_start', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 420407))),
                ('slot1_end', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 420426))),
                ('slot2_start', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 420440))),
                ('slot2_end', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 420456))),
                ('slot3_start', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 420470))),
                ('slot3_end', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 420483))),
                ('service', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='meenfee.Service')),
            ],
        ),
        migrations.CreateModel(
            name='Sunday',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot1_start', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 421935))),
                ('slot1_end', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 421954))),
                ('slot2_start', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 421979))),
                ('slot2_end', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 421995))),
                ('slot3_start', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 422009))),
                ('slot3_end', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 422023))),
                ('service', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='meenfee.Service')),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bannerimage', models.ImageField(default='service/img/default.jpg', upload_to='service/img')),
                ('subcategory', models.CharField(max_length=40, null=True, unique=True)),
                ('subcategory_in_arabic', models.CharField(default='هذه لغة عربية بسيطة', max_length=40, null=True)),
                ('description', models.CharField(default='Test', max_length=500, null=True)),
                ('description_in_arabic', models.CharField(default='الفئة', max_length=500, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meenfee.Category')),
            ],
            options={
                'verbose_name_plural': 'SubCatagories',
            },
        ),
        migrations.CreateModel(
            name='Slots',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(default='My time slots for each day', max_length=50)),
                ('day', models.TextField(choices=[('Sunday', 'Sunday'), ('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday')], default='Sunday')),
                ('start_time', models.TimeField(default='19:05:19')),
                ('end_time', models.TimeField(default='19:05:19')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meenfee.Service')),
            ],
            options={
                'verbose_name_plural': 'Slots',
            },
        ),
        migrations.CreateModel(
            name='SettledPayments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(choices=[('Card', 'Card'), ('Cash', 'Cash')], max_length=30)),
                ('payment_request_date', models.DateField(default=django.utils.timezone.now)),
                ('payment_request_time', models.TimeField(default=django.utils.timezone.now)),
                ('payment_settle_date', models.DateField(default=django.utils.timezone.now)),
                ('payment_settle_time', models.TimeField(default=django.utils.timezone.now)),
                ('booking_ID', models.CharField(blank=True, max_length=70, null=True)),
                ('cash_paid_by_requestor', models.BooleanField(default=False)),
                ('cash_collected_by_provider', models.BooleanField(default=False)),
                ('admin_charges', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('service_charges', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=14)),
                ('payment_card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Settled_Payments', to='meenfee.BankingInfo')),
                ('payment_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Settled_Payments_From', to='meenfee.UserOtherInfo')),
                ('payment_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Settled_Payments_To', to='meenfee.UserOtherInfo')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Settled_Payments', to='meenfee.Service')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceSpecificQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_id', models.CharField(blank=True, max_length=20, null=True)),
                ('question_for_provider_english', models.CharField(blank=True, max_length=200, null=True)),
                ('question_for_provider_arabic', models.CharField(blank=True, max_length=200, null=True)),
                ('question_for_requestor_english', models.CharField(blank=True, max_length=200, null=True)),
                ('question_for_requestor_arabic', models.CharField(blank=True, max_length=200, null=True)),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meenfee.ServiceList')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceSpecificOptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_english', models.CharField(blank=True, max_length=200, null=True)),
                ('option_arabic', models.CharField(blank=True, max_length=200, null=True)),
                ('question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meenfee.ServiceSpecificQuestions')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meenfee.ServiceList')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceSpecificAnswersFilledByProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_english', models.CharField(blank=True, max_length=200, null=True)),
                ('option_arabic', models.CharField(blank=True, max_length=200, null=True)),
                ('question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meenfee.ServiceSpecificQuestions')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meenfee.ServiceList')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], default='Day of the Week', max_length=250)),
                ('checked', models.BooleanField(default=False)),
                ('open_time', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 415896))),
                ('close_time', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 415916))),
                ('service_capacity', models.PositiveIntegerField(blank=True, default=1, null=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meenfee.Service')),
            ],
            options={
                'verbose_name_plural': 'Service Schedules',
            },
        ),
        migrations.CreateModel(
            name='ServiceRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('content', models.TextField(null=True)),
                ('uyt', models.TextField(null=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meenfee.Service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'MeenFee Service Rating',
            },
        ),
        migrations.AddField(
            model_name='servicelist',
            name='sub_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meenfee.SubCategory'),
        ),
        migrations.CreateModel(
            name='ServiceImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_img_file', models.FileField(default='service_images_new/service_images/default.jpg', upload_to='service_images_new/service_images')),
                ('service_img_file1', models.FileField(default='service_images_new/service_images/default.jpg', upload_to='service_images_new/service_images')),
                ('service_img_file2', models.FileField(default='service_images_new/service_images/default.jpg', upload_to='service_images_new/service_images')),
                ('is_arabic', models.BooleanField(default=False)),
                ('service_img_file_1_s3', models.CharField(blank=True, default='S3 Bucket URL of service image 1', max_length=250, null=True)),
                ('service_img_file_2_s3', models.CharField(blank=True, default='S3 Bucket URL of service image 2', max_length=250, null=True)),
                ('service_img_file_3_s3', models.CharField(blank=True, default='S3 Bucket URL of service image 3', max_length=250, null=True)),
                ('service', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='meenfee.Service')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(blank=True, default=1, null=True)),
                ('compliment', models.IntegerField(default=0)),
                ('review', models.TextField(blank=True, max_length=500, null=True)),
                ('feedback_date', models.DateField(default=datetime.datetime(2019, 9, 18, 19, 5, 19, 427056))),
                ('feedback_time', models.TimeField(default=datetime.datetime(2019, 9, 18, 19, 5, 19, 427077))),
                ('marked_for_moderation', models.BooleanField(default=False)),
                ('booking_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meenfee.NewBookings')),
                ('feedback_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meenfee.UserOtherInfo')),
                ('service_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meenfee.Service')),
            ],
        ),
        migrations.AddField(
            model_name='service',
            name='subcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meenfee.SubCategory'),
        ),
        migrations.AddField(
            model_name='service',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Saturday',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot1_start', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 421423))),
                ('slot1_end', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 421442))),
                ('slot2_start', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 421456))),
                ('slot2_end', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 421470))),
                ('slot3_start', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 421483))),
                ('slot3_end', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 421499))),
                ('service', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='meenfee.Service')),
            ],
        ),
        migrations.CreateModel(
            name='ReScheduledAppointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('re_scheduled_date', models.DateField()),
                ('re_sheduled_start_time', models.TimeField()),
                ('re_scheduled_end_time', models.TimeField()),
                ('isconfirmed_by_opp', models.BooleanField(default=False)),
                ('confirmed_by_opp_date', models.DateTimeField(blank=True, null=True)),
                ('rawbooking_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='meenfee.RawBooking')),
                ('re_scheduled_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Re-Scheduled Appointments',
            },
        ),
        migrations.AddField(
            model_name='rawbooking',
            name='service',
            field=models.ForeignKey(blank=True, default='2', null=True, on_delete=django.db.models.deletion.CASCADE, to='meenfee.Service'),
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField(validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(5)])),
                ('services', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meenfee.Service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionFilledByAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Question_name', models.CharField(default='Level', max_length=50, null=True)),
                ('Question_name_in_arabic', models.CharField(default='هذه لغة عربية', max_length=50, null=True)),
                ('question_for_provider', models.CharField(max_length=100, null=True)),
                ('question_for_provider_in_arabic', models.CharField(default='هذه لغة عربية بسيطة', max_length=100, null=True)),
                ('question_for_requestor', models.CharField(max_length=100, null=True)),
                ('question_for_requestor_in_arabic', models.CharField(default='هذه لغة عربية بسيطة', max_length=100, null=True)),
                ('question_tag', models.CharField(blank=True, default='QUESTION_TAG', max_length=100, null=True)),
                ('SubCategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meenfee.SubCategory')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meenfee.Category')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meenfee.ServiceList')),
            ],
            options={
                'verbose_name_plural': 'Question Filled By Admin',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=500)),
                ('bookingid', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='meenfee.RawBooking')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Payment Methods',
            },
        ),
        migrations.CreateModel(
            name='OptionsFilledbyAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Option1', models.CharField(default='Default', max_length=50, null=True)),
                ('Option1_in_arabic', models.CharField(blank=True, default='هذه لغة عربية بسيطة', max_length=50)),
                ('Option2', models.CharField(default='Default', max_length=50, null=True)),
                ('Option2_in_arabic', models.CharField(blank=True, default='هذه لغة عربية بسيطة', max_length=50)),
                ('Option3', models.CharField(blank=True, default='Default', max_length=50)),
                ('Option3_in_arabic', models.CharField(blank=True, default='هذه لغة عربية بسيطة', max_length=50)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meenfee.QuestionFilledByAdmin')),
            ],
            options={
                'verbose_name_plural': 'Options Filled by Admin',
            },
        ),
        migrations.CreateModel(
            name='OngoingBooking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmed_by_provider', models.BooleanField(default=False)),
                ('confirmed_by_requester', models.BooleanField(default=False)),
                ('booking_status', models.CharField(blank=True, max_length=2, null=True)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('rawbooking_id', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='meenfee.RawBooking')),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='requestor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isseen_by_opposite', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('delieverd', models.DateTimeField(blank=True, null=True)),
                ('isseen_opposite', models.BooleanField(default=False)),
                ('seen_time', models.DateTimeField(blank=True, null=True)),
                ('notification_from', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='notification_from', to=settings.AUTH_USER_MODEL)),
                ('notification_to', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='notification_to', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Notification',
            },
        ),
        migrations.CreateModel(
            name='NewService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(default='Service Name', max_length=200)),
                ('skilllevel', models.CharField(choices=[('Beginner-(0-3)', 'Beginner-(0-3)'), ('Medium-(3-7)', 'Medium-(3-7)'), ('Elite-(7+)', 'Elite-(7+)')], max_length=200)),
                ('location', models.CharField(default='Location of Service', max_length=200)),
                ('category', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='meenfee.Category')),
                ('subcategory', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='meenfee.SubCategory')),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'New Services',
            },
        ),
        migrations.AddField(
            model_name='newbookings',
            name='provider_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='meenfee.UserOtherInfo'),
        ),
        migrations.AddField(
            model_name='newbookings',
            name='requestor_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='booking_requestor', to='meenfee.UserOtherInfo'),
        ),
        migrations.AddField(
            model_name='newbookings',
            name='service_ID',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='meenfee.Service'),
        ),
        migrations.AddField(
            model_name='newbookings',
            name='service_slot_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meenfee.ServiceSchedule'),
        ),
        migrations.CreateModel(
            name='MostRecentProviders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meenfee.Service')),
            ],
            options={
                'verbose_name_plural': 'Most Recent Providers',
            },
        ),
        migrations.CreateModel(
            name='Monday',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot1_start', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 418808))),
                ('slot1_end', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 418828))),
                ('slot2_start', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 418842))),
                ('slot2_end', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 418855))),
                ('slot3_start', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 418872))),
                ('slot3_end', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 418887))),
                ('service', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='meenfee.Service')),
            ],
        ),
        migrations.CreateModel(
            name='MeenFeeFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('content1', models.TextField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'MeenFee Feedback',
            },
        ),
        migrations.CreateModel(
            name='LivePayments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(choices=[('Card', 'Card'), ('Cash', 'Cash')], max_length=30)),
                ('payment_request_date', models.DateField(default=django.utils.timezone.now)),
                ('payment_request_time', models.TimeField(default=django.utils.timezone.now)),
                ('payment_settle_date', models.DateField(default=django.utils.timezone.now)),
                ('payment_settle_time', models.TimeField(default=django.utils.timezone.now)),
                ('payment_settled', models.BooleanField(default=False)),
                ('booking_ID', models.CharField(blank=True, max_length=70, null=True)),
                ('cash_paid_by_requestor', models.BooleanField(default=False)),
                ('cash_collected_by_provider', models.BooleanField(default=False)),
                ('admin_charges', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('service_charges', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('payment_card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meenfee.BankingInfo')),
                ('payment_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Live_Payments_From', to='meenfee.UserOtherInfo')),
                ('payment_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Live_Payments_To', to='meenfee.UserOtherInfo')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meenfee.Service')),
            ],
        ),
        migrations.CreateModel(
            name='InAppBookingNotifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_user_name', models.CharField(default='From User Name', max_length=250)),
                ('to_user_name', models.CharField(default='To User Name', max_length=250)),
                ('notification_type', models.CharField(default='Notification Type', max_length=250)),
                ('notification_title', models.CharField(default='Notification Title', max_length=250)),
                ('service_name', models.CharField(default='Notification Body', max_length=250)),
                ('service_slot_start', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 422549))),
                ('service_slot_end', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 422571))),
                ('requested_service_time', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 422586))),
                ('requested_service_date', models.DateField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 422602))),
                ('notification_time', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 422616))),
                ('notification_date', models.DateField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 422629))),
                ('service_pricing', models.CharField(default='0.0', max_length=250)),
                ('service_place', models.CharField(default='Service Place', max_length=250)),
                ('notification_read', models.BooleanField(default=False)),
                ('rescheduled_date', models.DateField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 422681))),
                ('rescheduled_time', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 422695))),
                ('notification_body', models.TextField(blank=True)),
                ('to_user_usertype', models.CharField(blank=True, max_length=20)),
                ('notification_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('from_user_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='meenfee.UserOtherInfo')),
                ('to_user_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='to_user', to='meenfee.UserOtherInfo')),
            ],
        ),
        migrations.CreateModel(
            name='Friday',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot1_start', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 420911))),
                ('slot1_end', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 420930))),
                ('slot2_start', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 420944))),
                ('slot2_end', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 420961))),
                ('slot3_start', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 420974))),
                ('slot3_end', models.TimeField(blank=True, default=datetime.datetime(2019, 9, 18, 19, 5, 19, 420987))),
                ('service', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='meenfee.Service')),
            ],
        ),
        migrations.CreateModel(
            name='FeaturedServiceProviders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Featured Service Provider',
            },
        ),
        migrations.CreateModel(
            name='FeaturedProviders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meenfee.Service')),
            ],
            options={
                'verbose_name_plural': 'Featured Provider OLD',
            },
        ),
        migrations.CreateModel(
            name='Favourites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provider', to='meenfee.UserOtherInfo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meenfee.UserOtherInfo')),
            ],
            options={
                'verbose_name_plural': 'Favourites',
            },
        ),
        migrations.CreateModel(
            name='days',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Sunday', models.BooleanField(default=False)),
                ('Monday', models.BooleanField(default=False)),
                ('Tuesday', models.BooleanField(default=False)),
                ('Wednesday', models.BooleanField(default=False)),
                ('Thursday', models.BooleanField(default=False)),
                ('Friday', models.BooleanField(default=False)),
                ('Saturday', models.BooleanField(default=False)),
                ('Service', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='meenfee.Service')),
            ],
            options={
                'verbose_name_plural': 'Days',
            },
        ),
        migrations.CreateModel(
            name='DayAndSlots',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Sunday', 'Sunday'), ('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday')], default='Day', max_length=10, unique=True)),
                ('slot_1_start_time', models.TimeField(default='19:05:19')),
                ('slot_1_end_time', models.TimeField(default='19:05:19')),
                ('slot_2_start_time', models.TimeField(default='19:05:19')),
                ('slot_2_end_time', models.TimeField(default='19:05:19')),
                ('slot_3_start_time', models.TimeField(default='19:05:19')),
                ('slot_3_end_time', models.TimeField(default='19:05:19')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meenfee.Service')),
            ],
            options={
                'verbose_name_plural': 'Availibility Days and Time Slots',
            },
        ),
        migrations.CreateModel(
            name='CompletedBooking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('provider', models.ForeignKey(default='2', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('rawbooking_id', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='meenfee.RawBooking')),
            ],
            options={
                'verbose_name_plural': 'Completed Booking',
            },
        ),
        migrations.CreateModel(
            name='CommonQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_id', models.CharField(blank=True, max_length=20, null=True)),
                ('question_for_provider_english', models.CharField(blank=True, max_length=200, null=True)),
                ('question_for_provider_arabic', models.CharField(blank=True, max_length=200, null=True)),
                ('question_for_requestor_english', models.CharField(blank=True, max_length=200, null=True)),
                ('question_for_requestor_arabic', models.CharField(blank=True, max_length=200, null=True)),
                ('subcategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meenfee.SubCategory')),
            ],
        ),
        migrations.CreateModel(
            name='CommonOptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_english', models.CharField(blank=True, max_length=200, null=True)),
                ('option_arabic', models.CharField(blank=True, max_length=200, null=True)),
                ('question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meenfee.CommonQuestions')),
                ('subcategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meenfee.SubCategory')),
            ],
        ),
        migrations.CreateModel(
            name='CommonAnswersByProviders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_english', models.CharField(blank=True, max_length=200, null=True)),
                ('option_arabic', models.CharField(blank=True, max_length=200, null=True)),
                ('question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meenfee.CommonQuestions')),
                ('subcategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meenfee.SubCategory')),
            ],
        ),
        migrations.CreateModel(
            name='CanceledBooking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cancel_date', models.DateTimeField(auto_now_add=True)),
                ('canceled_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Provider', to=settings.AUTH_USER_MODEL)),
                ('rawbooking_id', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='meenfee.RawBooking')),
            ],
            options={
                'verbose_name_plural': 'Canceled Booking',
            },
        ),
        migrations.AddField(
            model_name='bankinginfo',
            name='card_holder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='BankingInfo', to='meenfee.UserOtherInfo'),
        ),
        migrations.CreateModel(
            name='AnswerByProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_Selected', models.CharField(blank=True, max_length=100, null=True)),
                ('option_Selected_in_arabic', models.CharField(blank=True, default='هذه لغة عربية بسيطة', max_length=100, null=True)),
                ('user_name', models.CharField(blank=True, max_length=40)),
                ('service_name', models.CharField(blank=True, max_length=70)),
                ('question_string', models.CharField(blank=True, max_length=100)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meenfee.QuestionFilledByAdmin')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meenfee.Service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Answer by Provider',
            },
        ),
    ]
